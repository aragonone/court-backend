name: Mainnet CI/CD
on:
  push:
    tags:
      - v*
env:
  # This is a base repository and we use ${GITHUB_REF##*/} to set the version of the container
  REPO: docker.pkg.github.com/aragonone/court-backend/mainnet

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: >
        docker login docker.pkg.github.com
        -u $GITHUB_ACTOR
        -p ${{ secrets.GITHUB_TOKEN }}
    # use previously built image for cache if possible
    - run: docker pull $REPO:latest || true
    - run: >
        docker build .
        -t $REPO:latest
        -t $REPO:${GITHUB_REF##*/}
        --cache-from $REPO:latest
    - run: docker push $REPO:latest
    - run: docker push $REPO:${GITHUB_REF##*/}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    # config cluster access (requires KUBE_CA, KUBE_SERVER, KUBE_TOKEN secrets)
    - run: |
        echo ${{ secrets.KUBE_CA }} | base64 -d > ca.crt
        kubectl config set-cluster aragon --server=${{ secrets.KUBE_SERVER }} --certificate-authority=ca.crt
        kubectl config set-credentials aragon --token=$(base64 -d <<< ${{ secrets.KUBE_TOKEN }})
        kubectl config set-context aragon --cluster=aragon --user=aragon
        kubectl config use-context aragon
    # replace deployment image
    - run: >
        kubectl set image deployment/court-backend
        server=$REPO:${GITHUB_REF##*/}
        services=$REPO:${GITHUB_REF##*/}
        app=$REPO:${GITHUB_REF##*/}
    # wait 5 min for the new pod to be ready. If the pod is not ready there is a problem with the new container
    - run: >
        kubectl wait pod --for condition=Ready --timeout=300s
        $(kubectl get pods -l app=court-backend --sort-by {.metadata.creationTimestamp} -o jsonpath={.items[-1].metadata.name})
    # wait 10 sec for k8s to reroute ingress and check app endpoint
    - run: sleep 10 && curl --fail https://court-backend-app.eth.aragon.network
